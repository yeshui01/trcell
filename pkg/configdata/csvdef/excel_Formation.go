// this file generated by tools,don't edit it!!!
package csvdef

import (
	"strings"
	"trcell/pkg/configdata/csvparse"

	"github.com/sirupsen/logrus"
)

const (
	FormationColumnID = iota
	FormationColumnName
	FormationColumnSpeed
)

type Formation struct {
	ID    int32
	Name  string
	Speed []int32
}
type FormationCfgModule struct {
	cfgMap  map[int32]*Formation
	cfgList []*Formation
}

func NewFormationCfgModule() *FormationCfgModule {
	return &FormationCfgModule{
		cfgMap: make(map[int32]*Formation),
	}
}

func (cfgMod *FormationCfgModule) Load(lineList []string) {
	logrus.Info("FormationCfgModule begin load")
	cfgMod.cfgList = make([]*Formation, len(lineList))
	for i, lstr := range lineList {
		columnList := strings.Split(lstr, ",")
		oneData := &Formation{}
		oneData.ID = csvparse.ParseColumnInt(columnList[FormationColumnID])
		oneData.Name = csvparse.ParseColumnString(columnList[FormationColumnName])
		oneData.Speed = csvparse.ParseColumnArrayInt(columnList[FormationColumnSpeed])
		cfgMod.cfgMap[oneData.ID] = oneData
		cfgMod.cfgList[i] = oneData
	}
	logrus.Infof("FormationCfgModule load finish!dataNum:%d", len(cfgMod.cfgList))
}

func (cfgMod *FormationCfgModule) GetData(id int32) *Formation {
	if cfg, ok := cfgMod.cfgMap[id]; ok {
		return cfg
	}
	return nil
}

func (cfgMod *FormationCfgModule) GetDataList() []*Formation {
	return cfgMod.cfgList
}
