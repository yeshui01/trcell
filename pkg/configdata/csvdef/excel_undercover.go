// this file generated by tools,don't edit it!!!
package csvdef
import (
	"trcell/pkg/configdata/csvparse"
	"strings"

	"github.com/sirupsen/logrus"
)
const (
	UndercoverColumnID = iota
	UndercoverColumnUndercover
	UndercoverColumnOther
)
type Undercover struct {
	ID        	int32
	Undercover	string
	Other     	string
}
type UndercoverCfgModule struct {
	cfgMap  map[int32]*Undercover
	cfgList []*Undercover
}

func NewUndercoverCfgModule() *UndercoverCfgModule {
	return &UndercoverCfgModule{
		cfgMap: make(map[int32]*Undercover),
	}
}

func (cfgMod *UndercoverCfgModule) Load(lineList []string) {
	logrus.Info("UndercoverCfgModule begin load")
	cfgMod.cfgList=make([]*Undercover, len(lineList))
	for i, lstr := range lineList {
		columnList := strings.Split(lstr, ",")
		oneData := &Undercover{}
		oneData.ID = csvparse.ParseColumnInt(columnList[UndercoverColumnID])
		oneData.Undercover = csvparse.ParseColumnString(columnList[UndercoverColumnUndercover])
		oneData.Other = csvparse.ParseColumnString(columnList[UndercoverColumnOther])
		cfgMod.cfgMap[oneData.ID] = oneData
		cfgMod.cfgList[i] = oneData
	}
	logrus.Infof("UndercoverCfgModule load finish!dataNum:%d",len(cfgMod.cfgList))
}

func (cfgMod *UndercoverCfgModule) GetData(id int32) *Undercover {
	if cfg, ok := cfgMod.cfgMap[id]; ok {
		return cfg
	}
	return nil
}

func (cfgMod *UndercoverCfgModule) GetDataList() []*Undercover {
	return cfgMod.cfgList
}
