// this file generated by tools,don't edit it!!!
package csvdef

import (
	"strings"
	"trcell/pkg/configdata/csvparse"

	"github.com/sirupsen/logrus"
)

const (
	ChargeColumnID = iota
	ChargeColumnChargeDes
	ChargeColumnVaild
	ChargeColumnType
	ChargeColumnNeedMoney
	ChargeColumnRewardMoney
	ChargeColumnRewardItem
	ChargeColumnDouble
)

type Charge struct {
	ID          int32
	ChargeDes   string
	Vaild       int32
	Type        int32
	NeedMoney   int32
	RewardMoney int32
	RewardItem  []int32
	Double      int32
}
type ChargeCfgModule struct {
	cfgMap  map[int32]*Charge
	cfgList []*Charge
}

func NewChargeCfgModule() *ChargeCfgModule {
	return &ChargeCfgModule{
		cfgMap: make(map[int32]*Charge),
	}
}

func (cfgMod *ChargeCfgModule) Load(lineList []string) {
	logrus.Info("ChargeCfgModule begin load")
	cfgMod.cfgList = make([]*Charge, len(lineList))
	for i, lstr := range lineList {
		columnList := strings.Split(lstr, ",")
		oneData := &Charge{}
		oneData.ID = csvparse.ParseColumnInt(columnList[ChargeColumnID])
		oneData.ChargeDes = csvparse.ParseColumnString(columnList[ChargeColumnChargeDes])
		oneData.Vaild = csvparse.ParseColumnInt(columnList[ChargeColumnVaild])
		oneData.Type = csvparse.ParseColumnInt(columnList[ChargeColumnType])
		oneData.NeedMoney = csvparse.ParseColumnInt(columnList[ChargeColumnNeedMoney])
		oneData.RewardMoney = csvparse.ParseColumnInt(columnList[ChargeColumnRewardMoney])
		oneData.RewardItem = csvparse.ParseColumnArrayInt(columnList[ChargeColumnRewardItem])
		oneData.Double = csvparse.ParseColumnInt(columnList[ChargeColumnDouble])
		cfgMod.cfgMap[oneData.ID] = oneData
		cfgMod.cfgList[i] = oneData
	}
	logrus.Infof("ChargeCfgModule load finish!dataNum:%d", len(cfgMod.cfgList))
}

func (cfgMod *ChargeCfgModule) GetData(id int32) *Charge {
	if cfg, ok := cfgMod.cfgMap[id]; ok {
		return cfg
	}
	return nil
}

func (cfgMod *ChargeCfgModule) GetDataList() []*Charge {
	return cfgMod.cfgList
}
