// this file generated by tools,don't edit it!!!
package csvdef

import (
	"strings"
	"trcell/pkg/configdata/csvparse"

	"github.com/sirupsen/logrus"
)

const (
	UnionBossColumnID = iota
	UnionBossColumnBossName
	UnionBossColumnType
	UnionBossColumnCopy
	UnionBossColumnBaseAward
	UnionBossColumnBaseAwardNum
	UnionBossColumnBossHP
)

type UnionBoss struct {
	ID           int32
	BossName     []string
	Type         int32
	Copy         int32
	BaseAward    []int32
	BaseAwardNum []int32
	BossHP       int32
}
type UnionBossCfgModule struct {
	cfgMap  map[int32]*UnionBoss
	cfgList []*UnionBoss
}

func NewUnionBossCfgModule() *UnionBossCfgModule {
	return &UnionBossCfgModule{
		cfgMap: make(map[int32]*UnionBoss),
	}
}

func (cfgMod *UnionBossCfgModule) Load(lineList []string) {
	logrus.Info("UnionBossCfgModule begin load")
	cfgMod.cfgList = make([]*UnionBoss, len(lineList))
	for i, lstr := range lineList {
		columnList := strings.Split(lstr, ",")
		oneData := &UnionBoss{}
		oneData.ID = csvparse.ParseColumnInt(columnList[UnionBossColumnID])
		oneData.BossName = csvparse.ParseColumnArrayString(columnList[UnionBossColumnBossName])
		oneData.Type = csvparse.ParseColumnInt(columnList[UnionBossColumnType])
		oneData.Copy = csvparse.ParseColumnInt(columnList[UnionBossColumnCopy])
		oneData.BaseAward = csvparse.ParseColumnArrayInt(columnList[UnionBossColumnBaseAward])
		oneData.BaseAwardNum = csvparse.ParseColumnArrayInt(columnList[UnionBossColumnBaseAwardNum])
		oneData.BossHP = csvparse.ParseColumnInt(columnList[UnionBossColumnBossHP])
		cfgMod.cfgMap[oneData.ID] = oneData
		cfgMod.cfgList[i] = oneData
	}
	logrus.Infof("UnionBossCfgModule load finish!dataNum:%d", len(cfgMod.cfgList))
}

func (cfgMod *UnionBossCfgModule) GetData(id int32) *UnionBoss {
	if cfg, ok := cfgMod.cfgMap[id]; ok {
		return cfg
	}
	return nil
}

func (cfgMod *UnionBossCfgModule) GetDataList() []*UnionBoss {
	return cfgMod.cfgList
}
